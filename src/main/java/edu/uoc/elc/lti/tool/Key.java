// Generated by delombok at Mon Jul 17 13:40:01 CEST 2023
package edu.uoc.elc.lti.tool;

/**
 * Universitat Oberta de Catalunya
 * Made for the project lti-13
 */
public class Key {
	private String id;
	private String privateKey;
	private String publicKey;
	private String algorithm;

	@java.lang.SuppressWarnings("all")
	Key(final String id, final String privateKey, final String publicKey, final String algorithm) {
		this.id = id;
		this.privateKey = privateKey;
		this.publicKey = publicKey;
		this.algorithm = algorithm;
	}


	@java.lang.SuppressWarnings("all")
	public static class KeyBuilder {
		@java.lang.SuppressWarnings("all")
		private String id;
		@java.lang.SuppressWarnings("all")
		private String privateKey;
		@java.lang.SuppressWarnings("all")
		private String publicKey;
		@java.lang.SuppressWarnings("all")
		private String algorithm;

		@java.lang.SuppressWarnings("all")
		KeyBuilder() {
		}

		/**
		 * @return {@code this}.
		 */
		@java.lang.SuppressWarnings("all")
		public Key.KeyBuilder id(final String id) {
			this.id = id;
			return this;
		}

		/**
		 * @return {@code this}.
		 */
		@java.lang.SuppressWarnings("all")
		public Key.KeyBuilder privateKey(final String privateKey) {
			this.privateKey = privateKey;
			return this;
		}

		/**
		 * @return {@code this}.
		 */
		@java.lang.SuppressWarnings("all")
		public Key.KeyBuilder publicKey(final String publicKey) {
			this.publicKey = publicKey;
			return this;
		}

		/**
		 * @return {@code this}.
		 */
		@java.lang.SuppressWarnings("all")
		public Key.KeyBuilder algorithm(final String algorithm) {
			this.algorithm = algorithm;
			return this;
		}

		@java.lang.SuppressWarnings("all")
		public Key build() {
			return new Key(this.id, this.privateKey, this.publicKey, this.algorithm);
		}

		@java.lang.Override
		@java.lang.SuppressWarnings("all")
		public java.lang.String toString() {
			return "Key.KeyBuilder(id=" + this.id + ", privateKey=" + this.privateKey + ", publicKey=" + this.publicKey + ", algorithm=" + this.algorithm + ")";
		}
	}

	@java.lang.SuppressWarnings("all")
	public static Key.KeyBuilder builder() {
		return new Key.KeyBuilder();
	}

	@java.lang.SuppressWarnings("all")
	public String getId() {
		return this.id;
	}

	@java.lang.SuppressWarnings("all")
	public String getPrivateKey() {
		return this.privateKey;
	}

	@java.lang.SuppressWarnings("all")
	public String getPublicKey() {
		return this.publicKey;
	}

	@java.lang.SuppressWarnings("all")
	public String getAlgorithm() {
		return this.algorithm;
	}

	@java.lang.SuppressWarnings("all")
	public void setId(final String id) {
		this.id = id;
	}

	@java.lang.SuppressWarnings("all")
	public void setPrivateKey(final String privateKey) {
		this.privateKey = privateKey;
	}

	@java.lang.SuppressWarnings("all")
	public void setPublicKey(final String publicKey) {
		this.publicKey = publicKey;
	}

	@java.lang.SuppressWarnings("all")
	public void setAlgorithm(final String algorithm) {
		this.algorithm = algorithm;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	public boolean equals(final java.lang.Object o) {
		if (o == this) return true;
		if (!(o instanceof Key)) return false;
		final Key other = (Key) o;
		if (!other.canEqual((java.lang.Object) this)) return false;
		final java.lang.Object this$id = this.getId();
		final java.lang.Object other$id = other.getId();
		if (this$id == null ? other$id != null : !this$id.equals(other$id)) return false;
		final java.lang.Object this$privateKey = this.getPrivateKey();
		final java.lang.Object other$privateKey = other.getPrivateKey();
		if (this$privateKey == null ? other$privateKey != null : !this$privateKey.equals(other$privateKey)) return false;
		final java.lang.Object this$publicKey = this.getPublicKey();
		final java.lang.Object other$publicKey = other.getPublicKey();
		if (this$publicKey == null ? other$publicKey != null : !this$publicKey.equals(other$publicKey)) return false;
		final java.lang.Object this$algorithm = this.getAlgorithm();
		final java.lang.Object other$algorithm = other.getAlgorithm();
		if (this$algorithm == null ? other$algorithm != null : !this$algorithm.equals(other$algorithm)) return false;
		return true;
	}

	@java.lang.SuppressWarnings("all")
	protected boolean canEqual(final java.lang.Object other) {
		return other instanceof Key;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	public int hashCode() {
		final int PRIME = 59;
		int result = 1;
		final java.lang.Object $id = this.getId();
		result = result * PRIME + ($id == null ? 43 : $id.hashCode());
		final java.lang.Object $privateKey = this.getPrivateKey();
		result = result * PRIME + ($privateKey == null ? 43 : $privateKey.hashCode());
		final java.lang.Object $publicKey = this.getPublicKey();
		result = result * PRIME + ($publicKey == null ? 43 : $publicKey.hashCode());
		final java.lang.Object $algorithm = this.getAlgorithm();
		result = result * PRIME + ($algorithm == null ? 43 : $algorithm.hashCode());
		return result;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	public java.lang.String toString() {
		return "Key(id=" + this.getId() + ", privateKey=" + this.getPrivateKey() + ", publicKey=" + this.getPublicKey() + ", algorithm=" + this.getAlgorithm() + ")";
	}
}
